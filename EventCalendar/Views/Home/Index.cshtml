
@{
    ViewBag.Title = "Home Page";
}

<h2>Daily/Weekly/Monthly Task Schedule</h2>

<div id="calendar"></div>

<div id="SaveDialog" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Save Event</h4>
            </div>
            <div class="modal-body">
                <form class="form-horizontal">
                    <input type="hidden" id="hidden_int_saveDialogEventID" value="0" />
                    <div class="form-group">
                        <label>Subject</label>
                        <input type="text" id="text_saveDialog_Subject" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label>Start</label>
                        <div class="input-group date" id="dtpStart">
                            <input type="text" id="text_saveDialog_Start" class="form-control" />
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                    </div>
                    <div class="form-group">
                        <label>End</label>
                        <div class="input-group date" id="dtpEnd">
                            <input type="text" id="text_saveDialog_End" class="form-control" />
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                    </div>
                    <div class="form-group">
                        <label>Description</label>
                        <textarea id="text_saveDialog_Description" rows="3" class="form-control"></textarea>
                    </div>
                    <div class="form-group">
                        <label>Event Color</label>
                        <select id="selection_SaveDialog_EventColor" class="form-control">
                            <option value="">Default</option>
                            <option value="red">Red</option>
                            <option value="blue">Blue</option>
                            <option value="black">Black</option>
                            <option value="green">Green</option>
                        </select>
                    </div>
                    <button type="button" id="btnSave" class="btn btn-success">Save</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </form>
            </div>
        </div>
    </div>
</div>

<div id="EditSummary_Dialog" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title"><span id="EditSummaryDialog_Subject"></span></h4>
            </div>
            <div class="modal-body">
                <button id="btnDelete" class="btn btn-default btn-sm pull-right">
                    <span class="glyphicon glyphicon-remove"></span> Delete Event
                </button>
                <button id="btnEdit" class="btn btn-default btn-sm pull-right" style="margin-right:5px;">
                    <span class="glyphicon glyphicon-pencil"></span> Edit Event
                </button>
                <p id="pDescription"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close Window</button>
            </div>
        </div>
    </div>
</div>



<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.47/css/bootstrap-datetimepicker.min.css" rel="stylesheet" />
<link href="//cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.10.2/fullcalendar.min.css" rel="stylesheet" />
<link href="//cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.10.2/fullcalendar.print.css" rel="stylesheet" media="print" />


@section EventCalendarFunctions{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.27.0/moment.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.47/js/bootstrap-datetimepicker.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.10.2/fullcalendar.min.js"></script>
    <script>

        $(document).ready(function () {

            var events = [];
            var selectedEvent = null;
            ReadFromDatabase_and_fillCalendar();

            // these provide datetimepicker to choose date and time values in add/edit dialog.
            $('#dtpStart,#dtpEnd').datetimepicker({
                format: 'MM-DD-YYYY HH:mm'
            });

            // FUNCTION DECLARATIONS //
            // i) function declarations
            function ReadFromDatabase_and_fillCalendar() {
                $.ajax({
                    type: "GET",
                    url: "/home/GetEvents",
                    success: function (data) {
                        $.each(data, function (i, v) {
                            // the fields should be according to -> https://fullcalendar.io/docs/v3/event-object
                            events.push({
                                id: v.EventID, // unique identifier of the event; so that we can delete selectedEvent.eventID
                                title: v.Subject,
                                description: v.Description, // custom field (Non-standard Field)
                                start: moment(v.Start),
                                end: moment(v.End),
                                color: v.EventColor,
                            });
                        })

                        GenerateCalender(events);
                    },
                    error: function (error) {
                        alert('failed');
                    }
                })
            }

            function GenerateCalender(events) {
                $('#calendar').fullCalendar('destroy');
                $('#calendar').fullCalendar({
                    editable: true,
                    selectable: true,
                    contentHeight: 400,
                    timeFormat: 'h(:mm)',
                    columnFormat: 'dddd', // full weekday names like Monday,Tuesday
                    header: {
                        left: 'prev,next today',
                        center: 'title',
                        right: 'month,basicWeek,basicDay,agenda'
                    },
                    eventLimit: true,
                    eventColor: '#378006',
                    events: events,
                    // https://fullcalendar.io/docs/v3/eventClick
                    // triggered when we click on an existing event in a day box
                    eventClick: function (calEvent, jsEvent, view) {

                        selectedEvent = calEvent // assign event to document-ready global selectedEvent variable to use in delete and edits
                        $('#EditSummary_Dialog #EditSummaryDialog_Subject').text = selectedEvent.title;

                        var $description = $('<div/>');

                        $description.append($('<p/>').html('<b>Start:</b>' + selectedEvent.start.format("MM-DD-YYYY HH:mm")));

                        $description.append($('<p/>').html('<b>End:</b>' + selectedEvent.end.format("MM-DD-YYYY HH:mm")));

                        $description.append($('<p/>').html('<b>Description:</b>' + selectedEvent.description));
                        $('#EditSummary_Dialog #pDescription').empty().html($description);

                        $('#EditSummary_Dialog').modal();
                    },

                    //triggered when we click on a day box
                    // the selected event is empty; the user is going to fill it
                    // Start and End values covers whole day initially (user can change it)
                    //Start and End are moment objects already in this select function
                    // https://fullcalendar.io/docs/v3/select-callback
                    select: function (start, end) {
                        selectedEvent = {
                            id: 0,
                            title: '',
                            description: '',
                            start: start,
                            end: end,
                            color: ''
                        };
                        openAddEditDialog();
                        $('#calendar').fullCalendar('unselect'); // clear selection to detect next selections correctly
                        selectedEvent = null;
                    },
                })
            }
            //function for submitting event data to the server.
            function SaveEvent(data) {
                $.ajax({
                    type: "POST",
                    url: '/home/SaveEvent',
                    data: data,
                    success: function (data) {
                        if (data.status) {
                            //Refresh the page
                            location.reload();
                            $('#SaveDialog').modal('hide');
                        }
                    },
                    error: function () {
                        alert('Failed');
                    }
                })
            }

            function openAddEditDialog() {
                if (selectedEvent != null) {
                    $('#hidden_int_saveDialogEventID').val(selectedEvent.id);
                    $('#text_saveDialog_Subject').val(selectedEvent.title);
                    $('#text_saveDialog_Start').val(moment(selectedEvent.start).format("MM-DD-YYYY HH:mm"));
                    $('#text_saveDialog_End').val(moment(selectedEvent.end).format("MM-DD-YYYY HH:mm"));
                    $('#text_saveDialog_Description').val(selectedEvent.description);
                    $('#selection_SaveDialog_EventColor').val(selectedEvent.color);
                }
                $('#EditSummary_Dialog').modal('hide'); //hide summary dialog
                $('#SaveDialog').modal(); // show save dialog for saving the event to db
            }

            // ii) Button Function Declarations

            // if clicked on this; then we already chose an event
            $('#btnEdit').click(function () {
                //Open modal dialog for edit event
                openAddEditDialog();
                selectedEvent = null;
            })

            // if clicked on this; then we already chose an event
            $('#btnDelete').click(function () {
                if (selectedEvent != null && confirm('Are you sure?')) {

                    // the only necessary field is EventID in this json object
                    var data = {
                        EventID: selectedEvent.id,
                        Subject: selectedEvent.title,
                        Start: moment(selectedEvent.start).format("MM-DD-YYYY HH:mm"),
                        End: moment(selectedEvent.end).format("MM-DD-YYYY HH:mm"),
                        Description: selectedEvent.description,
                        EventColor: selectedEvent.color
                    }

                    $.ajax({
                        type: "POST",
                        url: '/home/DeleteEvent',
                        data: data,
                        success: function (data) {
                            if (data.status) {
                                //Refresh the page
                                location.reload();
                                $('#EditSummary_Dialog').modal('hide');
                            }
                        },
                        error: function () {
                            alert('Failed');
                        }
                    })
                }
                selectedEvent = null;
            })


            $('#btnSave').click(function () {
                //Validation for required fields (NOT NULL in db)
                if ($('#text_saveDialog_Subject').val().trim() == "") {
                    alert('Subject required');
                    return;
                }
                if ($('#text_saveDialog_Start').val().trim() == "") {
                    alert('Start date required');
                    return;
                }
                if ($('#text_saveDialog_End').val().trim() == "") {
                    alert('End date required');
                    return;
                }


                //parse and convert to ticks for serialization (for c# to understand)
                var startDate = moment($('#text_saveDialog_Start').val(), "MM-DD-YYYY HH:mm").toDate();
                var endDate = moment($('#text_saveDialog_End').val(), "MM-DD-YYYY HH:mm").toDate();
                if (startDate > endDate) {
                    alert('Start date cannot be larger than End date!');
                    return;
                }


                var data = {
                    EventID: $('#hidden_int_saveDialogEventID').val(),
                    Subject: $('#text_saveDialog_Subject').val().trim(),
                    Start: $('#text_saveDialog_Start').val().trim(),
                    End: $('#text_saveDialog_End').val().trim(),
                    Description: $('#text_saveDialog_Description').val().trimEnd(),
                    EventColor: $('#selection_SaveDialog_EventColor').val()
                }
                SaveEvent(data); // call function for submit data to the server

            })

            // FUNCTION DECLARATIONS ENDED //


        })
    </script>
}